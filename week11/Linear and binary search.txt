//230968270
//Anamay Tripathy
//Linear and Binary Search Implementation

#include <iostream>
#include <algorithm>  // For sorting
using namespace std;

int binarysearch(int a[], int size, int key) {
    int start = 0;
    int end = size - 1;
    
    while (start <= end) {
        int mid = start + (end - start) / 2;  // Prevents overflow
        
        if (a[mid] == key)
            return mid;
        else if (a[mid] < key)
            start = mid + 1;
        else
            end = mid - 1;
    }
    return -1;
}

int linearsearch(int a[], int size, int key) {
    for (int i = 0; i < size; i++) {
        if (a[i] == key)
            return i;
    }
    return -1;
}

int main() {
    int ch, n, key;
    
    cout << "Please enter size of array: ";
    cin >> n;
    
    int a[n];
    cout << "Please enter array elements: ";
    for (int i = 0; i < n; i++)
        cin >> a[i];

    cout << "Please enter element to be searched: ";
    cin >> key;

    while (true) {
        cout << "\nPlease enter your choice:\n";
        cout << "1. Linear Search\n";
        cout << "2. Binary Search (Array will be sorted first)\n";
        cout << "3. Exit\n";
        cin >> ch;

        switch (ch) {
            case 1: {
                int index = linearsearch(a, n, key);
                if (index != -1)
                    cout << "The element is found by Linear Search at position " << index + 1 << endl;
                else
                    cout << "The element is not present in the list.\n";
                break;
            }
            case 2: {
                sort(a, a + n);  // Sorting the array before binary search
                int index = binarysearch(a, n, key);
                if (index != -1)
                    cout << "The element is found by Binary Search at position " << index + 1 << endl;
                else
                    cout << "The element is not present in the list.\n";
                break;
            }
            case 3:
                exit(0);
            default:
                cout << "Invalid choice! Please try again.\n";
        }
    }
}
